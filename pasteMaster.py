# ttps://flask.palletsprojects.com/en/2.2.x/quickstart/#file-uploads
import json
import printer
# import detect
import time

from flask import Flask, render_template, send_file
app = Flask(__name__)

printer1 = printer.Printer("/dev/ttyUSB0", 115200, 55, 50)

demoPadRange = [[2, 0, 0], [55, 255, 255]]
demoPCBRange = [[135, 100, 78], [160, 255, 255]]
pixelsPerMilimeter = 27.3315496994
offset = (69.9, 11.2, 0)

# detector = detect.Detector(demoPadRange, demoPCBRange, pixelsPerMilimeter, offset)
# detections = []

if __name__ == '__main__':
   app.run()

@app.route('/')
def homes():
   return render_template('index.html')

@app.route('/start', methods=['GET'])
def index():
   printer1.make_photo()

   time.sleep(1)
   # detections = detector.detect("static/image/view.jpg", (75, 150, 100), (3280, 2464))
    
   # file = open(r'./src/pythonScript/photo.py', 'r').read()
   # return render_template('start.html'), exec(file)
   return render_template('start.html')

@app.route('/pcb')
def get_image():
   filename = 'static/image/view.jpg'
   return send_file(filename, mimetype='image/jpg')

@app.route('/array')
def get_array():
   # test array array.jpg
   # detections = [[[32,12],[72, 11],[74, 66],[34, 68]], [[124,   9],[164,   7],[166,  62],[126,  64]], [[170, 307],[207, 307],[207, 355],[170, 355]]]
   # Full Array array.jpg
   # detections = [[[32, 12], [72, 11], [74, 66], [34, 68]], [[124, 9], [164, 7], [166, 62], [126, 64]], [[170, 307], [207, 307], [207, 355], [170, 355]], [[255, 304], [292, 304], [292, 351], [255, 351]], [[183, 193], [215, 192], [217, 243], [185, 244]], [[242, 191], [274, 191], [274, 241], [242, 241]], [[54, 129], [91, 129], [91, 167], [54, 167]], [[115, 127], [152, 127], [152, 164], [115, 164]], [[52, 79], [82, 79], [82, 115], [52, 115]], [[192, 142], [218, 141], [220, 182], [193, 183]], [[120, 76], [149, 76], [149, 112], [120, 112]], [[235, 141], [261, 139], [263, 179], [237, 181]], [[184, 256], [211, 256], [211, 295], [184, 295]], [[60, 181], [92, 179], [94, 212], [62, 214]], [[252, 253], [278, 253], [278, 291], [252, 291]], [[116, 179], [147, 177], [149, 209], [118, 211]], [[64, 226], [93, 226], [93, 255], [64, 255]], [[122, 223], [151, 223], [151, 252], [122, 252]], [[194, 100], [215, 100], [215, 128], [194, 128]], [[240, 97], [261, 97], [261, 127], [240, 127]], [[73, 270], [95, 270], [95, 292], [73, 292]], [[125, 268], [146, 268], [146, 290], [125, 290]], [[341, 62], [360, 62], [360, 87], [341, 87]], [[324, 112], [345, 112], [345, 137], [324, 137]], [[200, 71], [222, 71], [222, 90], [200, 90]], [[231, 69], [253, 69], [253, 89], [231, 89]], [[321, 181], [330, 162], [350, 172], [340, 191]], [[347, 215], [360, 215], [360, 235], [347, 235]], [[229, 45], [239, 45], [239, 57], [229, 57]], [[210, 47], [221, 47], [221, 58], [210, 58]], [[87, 306], [100, 306], [100, 314], [87, 314]], [[122, 304], [134, 304], [134, 312], [122, 312]], [[225, 23], [235, 23], [235, 30], [225, 30]], [[96, 330], [104, 330], [104, 336], [96, 336]], [[119, 329], [127, 329], [127, 335], [119, 335]], [[214, 23], [220, 23], [220, 30], [214, 30]], [[120, 350], [126, 350], [126, 355], [120, 355]], [[99, 356], [99, 350], [104, 350],[104,356]]]

   detections = [[[1699, 1499], [1803, 1495], [1805, 1550], [1701, 1554]], [[1676, 1671], [1717, 1671], [1717, 1726], [1676, 1726]], [[1798, 1666], [1840, 1664], [1843, 1719], [1801, 1721]], [[1737, 1669], [1778, 1668], [1780, 1722], [1738, 1723]], [[1646, 589], [1688, 589], [1688, 633], [1646, 633]], [[1770, 587], [1811, 587], [1811, 629], [1770, 629]], [[1655, 808], [1695, 808], [1695, 850], [1655, 850]], [[1777, 805], [1817, 805], [1817, 846], [1777, 846]], [[1530, 1538], [1555, 1536], [1558, 1591], [1533, 1593]], [[1371, 1632], [1396, 1631], [1397, 1685], [1373, 1686]], [[1422, 1543], [1447, 1542], [1448, 1595], [1424, 1596]], [[1267, 824], [1306, 822], [1308, 857], [1268, 859]], [[1409, 701], [1447, 701], [1447, 735], [1409, 735]], [[1266, 801], [1266, 767], [1305, 767], [1305, 801]], [[1406, 645], [1444, 645], [1444, 679], [1406, 679]], [[1411, 764], [1450, 764], [1450, 797], [1411, 797]], [[1480, 1627], [1505, 1626], [1506, 1680], [1482, 1681]], [[1413, 820], [1452, 820], [1452, 853], [1413, 853]], [[1507, 761], [1547, 761], [1547, 793], [1507, 793]], [[1509, 819], [1549, 819], [1549, 851], [1509, 851]], [[1262, 707], [1301, 707], [1301, 739], [1262, 739]], [[1257, 649], [1298, 647], [1300, 679], [1259, 682]], [[1714, 1437], [1746, 1437], [1746, 1474], [1714, 1474]], [[1660, 1439], [1692, 1439], [1692, 1476], [1660, 1476]], [[1338, 908], [1365, 908], [1365, 950], [1338, 950]], [[1297, 909], [1324, 909], [1324, 952], [1297, 952]], [[1380, 906], [1406, 906], [1406, 948], [1380, 948]], [[1421, 906], [1446, 906], [1446, 947], [1421, 947]], [[1586, 901], [1611, 901], [1611, 942], [1586, 942]], [[1625, 899], [1650, 898], [1652, 939], [1627, 940]], [[1544, 902], [1569, 902], [1569, 943], [1544, 943]], [[1357, 1388], [1382, 1387], [1384, 1428], [1359, 1429]], [[1522, 1382], [1547, 1382], [1547, 1422], [1522, 1422]], [[1462, 904], [1487, 904], [1487, 945], [1462, 945]], [[1316, 1389], [1340, 1388], [1342, 1429], [1317, 1430]], [[1480, 1384], [1505, 1383], [1506, 1424], [1482, 1425]], [[1399, 1387], [1424, 1387], [1424, 1427], [1399, 1427]], [[1439, 1385], [1464, 1384], [1466, 1425], [1441, 1426]], [[1603, 1379], [1628, 1379], [1628, 1419], [1603, 1419]], [[1563, 1381], [1588, 1381], [1588, 1421], [1563, 1421]], [[1503, 904], [1528, 904], [1528, 944], [1503, 944]], [[1643, 1378], [1668, 1376], [1670, 1416],[1645,1417]]]
   printerPoints = ['Test', 'tset'] ;

   dict = {
    "detections": detections,
    "printerPoints": printerPoints
   }
   detections_json = json.dumps(detections)

   return (detections_json)
   # filename = 'static/text/test.txt'
   # return send_file(filename, mimetype='text/plain')

@app.errorhandler(404)
def page_not_found(error):
   return render_template('page_not_found.html'), 404

